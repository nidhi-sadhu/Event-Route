{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nidhi.sadhu\\\\OneDrive - Houston Texans\\\\Desktop\\\\Nidhi\\\\Projects\\\\Git\\\\React Projects\\\\Event Route\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, Await } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {\n      status: 500\n    });\n  } else {\n    const responseData = await response.json();\n    return responseData;\n  }\n}\nexport function loader() {\n  return {\n    events: loadEvents()\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","Await","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","Response","JSON","stringify","message","status","responseData","json","loader","$RefreshReg$"],"sources":["C:/Users/nidhi.sadhu/OneDrive - Houston Texans/Desktop/Nidhi/Projects/Git/React Projects/Event Route/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\nimport { useLoaderData, Await } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n\r\n  const events = data.events;\r\n  return (\r\n    <>\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <Await resolve={events}>\r\n          {(loadedEvents) => <EventsList events={loadedEvents} />}\r\n        </Await>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    const responseData = await response.json();\r\n    return responseData;\r\n  }\r\n}\r\n\r\nexport function loader() {\r\n  return {\r\n    events: loadEvents(),\r\n  };\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AACvD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAE5B,MAAMU,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,QAAQ;MAACU,QAAQ,eAAER,OAAA;QAAAO,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAL,QAAA,eACpCP,OAAA,CAACH,KAAK;QAACgB,OAAO,EAAEP,MAAO;QAAAC,QAAA,EACnBO,YAAY,iBAAKd,OAAA,CAACL,UAAU;UAACW,MAAM,EAAEQ;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACX,CAAC;AAEP;AAACR,EAAA,CAbQD,UAAU;EAAA,QACJP,aAAa;AAAA;AAAAmB,EAAA,GADnBZ,UAAU;AAenB,eAAeA,UAAU;AAEzB,eAAea,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACzEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACrB;AACF;AAEA,OAAO,SAASE,MAAMA,CAAA,EAAG;EACvB,OAAO;IACLrB,MAAM,EAAEU,UAAU,CAAC;EACrB,CAAC;AACH;AAAC,IAAAD,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}